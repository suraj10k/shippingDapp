{"ast":null,"code":"var _jsxFileName = \"/home/suraj/dev/blockchain/shippingDapp/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport ItemManagerContract from \"./contracts/ItemManager.json\";\nimport ItemContract from \"./contracts/Item.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false,\n      cost: 0,\n      itemName: \"example_1\"\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        this.web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        this.accounts = await this.web3.eth.getAccounts(); // Get the contract instance.\n\n        this.networkId = await this.web3.eth.net.getId();\n        this.itemManager = new this.web3.eth.Contract(ItemManagerContract.abi, ItemManagerContract.networks[this.networkId] && ItemManagerContract.networks[this.networkId].address);\n        this.item = new this.web3.eth.Contract(ItemContract.abi, ItemContract.networks[this.networkId] && ItemContract.networks[this.networkId].address);\n        this.listenToPaymentEvent(); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          loaded: true\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleSubmit = async () => {\n      const _this$state = this.state,\n            cost = _this$state.cost,\n            itemName = _this$state.itemName;\n      console.log(itemName, cost, this.itemManager);\n      let result = await this.itemManager.methods.createItem(itemName, cost).send({\n        from: this.accounts[0]\n      });\n      console.log(result);\n      alert(\"Send \" + cost + \" Wei to \" + result.events.SupplyChainStep.returnValues._address);\n    };\n\n    this.listenToPaymentEvent = () => {\n      let self = this;\n      this.itemManager.events.SupplyChainStep().on(\"data\", async function (evt) {\n        let itemObj = await self.itemManager.methods.items(evt.returnValues._itemIndex).call();\n        alert();\n      });\n    };\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Simply Payment/Supply Chain Example!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Items\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add Element\"), \"Cost: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cost\",\n      value: this.state.cost,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \"Item Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"itemName\",\n      value: this.state.itemName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Create new Item\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/suraj/dev/blockchain/shippingDapp/client/src/App.js"],"names":["React","Component","ItemManagerContract","ItemContract","getWeb3","App","state","loaded","cost","itemName","componentDidMount","web3","accounts","eth","getAccounts","networkId","net","getId","itemManager","Contract","abi","networks","address","item","listenToPaymentEvent","setState","error","alert","console","handleSubmit","log","result","methods","createItem","send","from","events","SupplyChainStep","returnValues","_address","self","on","evt","itemObj","items","_itemIndex","call","handleInputChange","event","target","value","type","checked","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ItemManagerContract from \"./contracts/ItemManager.json\";\nimport ItemContract from \"./contracts/Item.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { loaded:false,cost:0,itemName:\"example_1\" };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      this.web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      this.accounts = await this.web3.eth.getAccounts();\n\n      // Get the contract instance.\n      this.networkId = await this.web3.eth.net.getId();\n      this.itemManager = new this.web3.eth.Contract(\n        ItemManagerContract.abi,\n        ItemManagerContract.networks[this.networkId] && ItemManagerContract.networks[this.networkId].address,\n      );\n\n      this.item = new this.web3.eth.Contract(\n        ItemContract.abi,\n        ItemContract.networks[this.networkId] && ItemContract.networks[this.networkId].address,\n      );\n\n      this.listenToPaymentEvent();\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ loaded:true });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n    handleSubmit = async () => {\n    const { cost, itemName } = this.state;\n    console.log(itemName, cost, this.itemManager);\n    let result = await this.itemManager.methods.createItem(itemName, cost).send({ from:this.accounts[0] });\n    console.log(result);\n    alert(\"Send \"+cost+\" Wei to \"+result.events.SupplyChainStep.returnValues._address);\n    };\n    \n    listenToPaymentEvent = () => {\n      let self = this;\n      this.itemManager.events.SupplyChainStep().on(\"data\",async function(evt){\n        let itemObj = await self.itemManager.methods.items(evt.returnValues._itemIndex).call();\n        alert()\n      });\n    }\n\n    handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n    [name]: value\n    });\n    }\n   \n  render() {\n    if (!this.state.loaded) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n      <h1>Simply Payment/Supply Chain Example!</h1>\n      <h2>Items</h2>\n\n      <h2>Add Element</h2>\n      Cost: <input type=\"text\" name=\"cost\" value={this.state.cost} onChange={this.handleInputChange} />\n      Item Name: <input type=\"text\" name=\"itemName\" value={this.state.itemName} onChange={this.handleInputChange} />\n      <button type=\"button\" onClick={this.handleSubmit}>Create new Item</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}