{"ast":null,"code":"var _jsxFileName = \"/home/suraj/dev/blockchain/shippingDapp/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport ItemManagerContract from \"./contracts/ItemManager.json\";\nimport ItemContract from \"./contracts/Item.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        this.web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        this.accounts = await this.web3.eth.getAccounts(); // Get the contract instance.\n\n        this.networkId = await this.web3.eth.net.getId();\n        this.itemManager = new web3.eth.Contract(ItemManagerContract.abi, ItemManagerContract.networks[networkId] && ItemManagerContract.networks[networkId].address);\n        this.item = new web3.eth.Contract(ItemContract.abi, ItemContract.networks[networkId] && ItemContract.networks[networkId].address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          loaded: true\n        });\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Simply Payment/Supply Chain Example!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Items\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add Element\"), \"Cost: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cost\",\n      value: this.state.cost,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \"Item Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"itemName\",\n      value: this.state.itemName,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Create new Item\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/suraj/dev/blockchain/shippingDapp/client/src/App.js"],"names":["React","Component","ItemManagerContract","ItemContract","getWeb3","App","state","loaded","componentDidMount","web3","accounts","eth","getAccounts","networkId","net","getId","itemManager","Contract","abi","networks","address","item","setState","error","alert","console","render","cost","handleInputChange","itemName","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AAAEC,MAAAA,MAAM,EAAC;AAAT,KADkB;;AAAA,SAG1BC,iBAH0B,GAGN,YAAY;AAC9B,UAAI;AACF;AACA,aAAKC,IAAL,GAAY,MAAML,OAAO,EAAzB,CAFE,CAIF;;AACA,aAAKM,QAAL,GAAgB,MAAM,KAAKD,IAAL,CAAUE,GAAV,CAAcC,WAAd,EAAtB,CALE,CAOF;;AACA,aAAKC,SAAL,GAAiB,MAAM,KAAKJ,IAAL,CAAUE,GAAV,CAAcG,GAAd,CAAkBC,KAAlB,EAAvB;AACA,aAAKC,WAAL,GAAmB,IAAIP,IAAI,CAACE,GAAL,CAASM,QAAb,CACjBf,mBAAmB,CAACgB,GADH,EAEjBhB,mBAAmB,CAACiB,QAApB,CAA6BN,SAA7B,KAA2CX,mBAAmB,CAACiB,QAApB,CAA6BN,SAA7B,EAAwCO,OAFlE,CAAnB;AAKA,aAAKC,IAAL,GAAY,IAAIZ,IAAI,CAACE,GAAL,CAASM,QAAb,CACVd,YAAY,CAACe,GADH,EAEVf,YAAY,CAACgB,QAAb,CAAsBN,SAAtB,KAAoCV,YAAY,CAACgB,QAAb,CAAsBN,SAAtB,EAAiCO,OAF3D,CAAZ,CAdE,CAmBF;AACA;;AACA,aAAKE,QAAL,CAAc;AAAEf,UAAAA,MAAM,EAAC;AAAT,SAAd;AACD,OAtBD,CAsBE,OAAOgB,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,0EAAL;AAGAC,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;AACF,KAjCyB;AAAA;;AAmC1BG,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKpB,KAAL,CAAWC,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAP;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJA,YAKM;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWqB,IAAjD;AAAuD,MAAA,QAAQ,EAAE,KAAKC,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALN,iBAMW;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWuB,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKD,iBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANX,EAOA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKE,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPA,CADF;AAWD;;AAlDyB;;AAqD5B,eAAezB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ItemManagerContract from \"./contracts/ItemManager.json\";\nimport ItemContract from \"./contracts/Item.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { loaded:false };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      this.web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      this.accounts = await this.web3.eth.getAccounts();\n\n      // Get the contract instance.\n      this.networkId = await this.web3.eth.net.getId();\n      this.itemManager = new web3.eth.Contract(\n        ItemManagerContract.abi,\n        ItemManagerContract.networks[networkId] && ItemManagerContract.networks[networkId].address,\n      );\n\n      this.item = new web3.eth.Contract(\n        ItemContract.abi,\n        ItemContract.networks[networkId] && ItemContract.networks[networkId].address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ loaded:true });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.loaded) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n      <h1>Simply Payment/Supply Chain Example!</h1>\n      <h2>Items</h2>\n\n      <h2>Add Element</h2>\n      Cost: <input type=\"text\" name=\"cost\" value={this.state.cost} onChange={this.handleInputChange} />\n      Item Name: <input type=\"text\" name=\"itemName\" value={this.state.itemName} onChange={this.handleInputChange} />\n      <button type=\"button\" onClick={this.handleSubmit}>Create new Item</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}